! function(a) {

    "use strict";

    redux.field_objects = redux.field_objects || {}, redux.field_objects.import_export = redux.field_objects.import_export || {}, a(document).ready(function() {

        redux.field_objects.import_export.init()

    }), redux.field_objects.import_export.init = function(b) {

        b || (b = a(document).find(".redux-container-import_export"));

        var c = b;

        if (b.hasClass("redux-field-container") || (c = b.parents(".redux-field-container:first")), c.hasClass("redux-field-init")) {

            c.removeClass("redux-field-init"), a("#redux-import").click(function(b) {

                return "" === a("#import-code-value").val() && "" === a("#import-link-value").val() ? (b.preventDefault(), !1) : void(window.onbeforeunload = null)

            }), a("#redux-import-code-button").click(function() {

                a("#redux-import-link-wrapper").is(":visible") && (a("#redux-import-link-wrapper").hide(), a("#import-link-value").val("")), a("#redux-import-code-wrapper").fadeIn("fast")

            }), a("#redux-import-link-button").click(function() {

                a("#redux-import-code-wrapper").is(":visible") && (a("#redux-import-code-wrapper").hide(), a("#import-code-value").val("")), a("#redux-import-link-wrapper").fadeIn("fast")

            }), a("#redux-export-code-copy").click(function() {

                a("#redux-export-link-value").is(":visible") && a("#redux-export-link-value").hide(), a("#redux-export-code").fadeIn("fast")

            }), a("#redux-export-link").click(function() {

                a("#redux-export-code").is(":visible") && a("#redux-export-code").hide(), a("#redux-export-link-value").fadeIn("fast")

            });

            var d = document.getElementById("redux-export-code");

            d.onfocus = function() {

                d.select(), d.onmouseup = function() {

                    return d.onmouseup = null, !1

                }

            };

            var e = document.getElementById("import-code-value");

            e.onfocus = function() {

                e.select(), e.onmouseup = function() {

                    return e.onmouseup = null, !1

                }

            }



            var urlVars = redux.field_objects.import_export.getUrlVars();

            if(urlVars.hasOwnProperty('import')) {

                a.post( "themes.php?page=import-demo&import", { url: decodeURIComponent(urlVars['import']) }, function( data ) {

                    a('#import-loader').remove();

                });

            }



            a("#redux-form-wrapper").submit(function(event){



	        	event.preventDefault();

	        	var $this = this;

                var link = a("#import-link-value").val();

                a('input[name="_wp_http_referer"]').val(a('input[name="_wp_http_referer"]').val() + '&import=' + encodeURIComponent(link));

                a("#import-link-value").val( a("#import-link-value").val() + '/theme_options.json' );

                console.log(a("#import-link-value").val());

                a($this).unbind('submit').submit();

	        })

        }

    },  redux.field_objects.import_export.getUrlVars = function ()

        {

            var vars = [], hash;

            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');

            for(var i = 0; i < hashes.length; i++)

            {

                hash = hashes[i].split('=');

                vars.push(hash[0]);

                vars[hash[0]] = hash[1];

            }

            return vars;

        }

}(jQuery);